upstream backend {
  {% for node in groups.backends %}
  server {{ hostvars[node]['ansible_host'] }}:81;
  {% endfor %}
}

server {
  listen 80; #listen on port 80
  server_name web.app;
  location / {
    proxy_read_timeout 300s;
    proxy_pass http://backend; #pass all requests processed to the backend upstream servers
  }
}
server {
  listen 8080;
  server_name stub;
  location /stub_status {
    stub_status;
  }
}
server {
  listen 443 ssl;
  server_name mynginx;
  location /internal/metric/nginx {
    proxy_pass http://localhost:9113/metrics;
  }
  location /internal/kibana {
    proxy_pass http://{{kibana_server}}:5601;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
  }
  location /internal/grafana {
    proxy_pass http://{{grafana_server}}:3000;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
  }
  location /internal/alerts {
    proxy_pass http://{{grafana_server}}:9093;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
  }
  location /internal/prometheus {
#    rewrite ^/internal/prometheus(.*)$ /$1 break;
    proxy_pass http://{{grafana_server}}:9090;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
  }

  ssl_certificate /etc/ssl/certs/pub.crt;
  ssl_certificate_key /etc/ssl/certs/priv.key;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers         HIGH:!aNULL:!MD5;
  location / {
    proxy_read_timeout 300s;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://backend/;
    add_header 'Content-Security-Policy' 'upgrade-insecure-requests';
  }
}
